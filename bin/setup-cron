#!/bin/bash
# MarketMan Cron Setup Helper
# Easily install and manage MarketMan cron jobs

set -e

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
MARKETMAN_DIR="$(dirname "$SCRIPT_DIR")"
CRON_FILE="$MARKETMAN_DIR/cron-setup-clean.txt"
TEMP_CRON="/tmp/marketman-cron-$(date +%s)"

echo "üïê MarketMan Cron Setup Helper"
echo "==============================="

# Function to show current MarketMan cron jobs
show_current() {
    echo "üìã Current MarketMan cron jobs:"
    crontab -l 2>/dev/null | grep -E "(marketman|MarketMan)" || echo "   No MarketMan cron jobs found"
}

# Function to install cron jobs
install_cron() {
    echo "üì¶ Installing MarketMan cron jobs..."
    
    # Check if cron file exists
    if [ ! -f "$CRON_FILE" ]; then
        echo "‚ùå Error: cron-setup-clean.txt not found at $CRON_FILE"
        echo "   Creating default cron configuration..."
        create_default_cron
    fi
    
    # Backup current crontab
    echo "üì¶ Backing up current crontab..."
    mkdir -p "$MARKETMAN_DIR/.backups"
    crontab -l > "$MARKETMAN_DIR/.backups/crontab-backup-$(date +%Y%m%d-%H%M%S).txt" 2>/dev/null || echo "No existing crontab found"
    
    # Get current crontab (if any)
    crontab -l 2>/dev/null > "$TEMP_CRON" || touch "$TEMP_CRON"
    
    # Remove existing MarketMan entries
    grep -v -E "(marketman|MarketMan)" "$TEMP_CRON" > "${TEMP_CRON}.clean" 2>/dev/null || touch "${TEMP_CRON}.clean"
    
    # Add new MarketMan entries (skip comments and empty lines)
    grep -E "^[0-9*]" "$CRON_FILE" >> "${TEMP_CRON}.clean"
    
    # Install new crontab
    crontab "${TEMP_CRON}.clean"
    
    # Cleanup
    rm -f "$TEMP_CRON" "${TEMP_CRON}.clean"
    
    echo "‚úÖ MarketMan cron jobs installed successfully!"
    echo ""
    show_current
}

# Function to create default cron configuration
create_default_cron() {
    cat > "$CRON_FILE" << 'EOF'
# MarketMan Automated Trading System - Cron Configuration

# ===== CORE TRADING ANALYSIS =====
*/15 * * * * cd /root/marketMan && ./bin/marketman run >> /var/log/marketman.log 2>&1
*/10 * * * * cd /root/marketMan && ./bin/marketman-alerts process >> /var/log/marketman.log 2>&1

# ===== DAILY MAINTENANCE =====
0 7 * * * cd /root/marketMan && ./bin/marketman monitor --system >> /var/log/marketman.log 2>&1
0 8 * * * cd /root/marketMan && ./bin/marketman memory --stats >> /var/log/marketman.log 2>&1
0 9 * * * cd /root/marketMan && ./bin/gmail-organizer auto >> /var/log/marketman.log 2>&1
0 18 * * * cd /root/marketMan && ./bin/marketman send "MarketMan daily status: $(./bin/marketman-alerts stats | head -n 3 | tail -n 1)" --title "MarketMan Daily Report" >> /var/log/marketman.log 2>&1

# ===== WEEKLY MAINTENANCE =====
0 6 * * 0 cd /root/marketMan && ./bin/marketman test --all >> /var/log/marketman.log 2>&1
0 2 * * 0 cd /root/marketMan && ./bin/marketman memory --cleanup 30 >> /var/log/marketman.log 2>&1
0 3 * * 0 /usr/sbin/logrotate -f /etc/logrotate.d/marketman
EOF
    echo "‚úÖ Default cron configuration created"
}

# Function to remove MarketMan cron jobs
remove_cron() {
    echo "üóëÔ∏è Removing MarketMan cron jobs..."
    
    # Get current crontab
    crontab -l 2>/dev/null > "$TEMP_CRON" || touch "$TEMP_CRON"
    
    # Remove MarketMan entries
    grep -v -E "(marketman|MarketMan)" "$TEMP_CRON" > "${TEMP_CRON}.clean" 2>/dev/null || touch "${TEMP_CRON}.clean"
    
    # Install cleaned crontab
    crontab "${TEMP_CRON}.clean"
    
    # Cleanup
    rm -f "$TEMP_CRON" "${TEMP_CRON}.clean"
    
    echo "‚úÖ MarketMan cron jobs removed!"
}

# Function to show log tail
show_logs() {
    echo "üìÑ Recent MarketMan logs:"
    echo "========================"
    if [ -f "/var/log/marketman.log" ]; then
        tail -n 20 /var/log/marketman.log
    else
        echo "   No logs found at /var/log/marketman.log"
        echo "   Logs will be created when cron jobs run"
    fi
}

# Function to test the setup
test_setup() {
    echo "üß™ Testing MarketMan CLI commands..."
    echo "===================================="
    
    cd "$MARKETMAN_DIR"
    
    echo "Testing marketman CLI..."
    if ./bin/marketman test --pushover; then
        echo "‚úÖ MarketMan CLI working"
    else
        echo "‚ùå MarketMan CLI test failed"
    fi
    
    echo ""
    echo "Testing marketman-alerts CLI..."
    if ./bin/marketman-alerts stats >/dev/null 2>&1; then
        echo "‚úÖ MarketMan-alerts CLI working"
    else
        echo "‚ùå MarketMan-alerts CLI test failed"
    fi
    
    echo ""
    echo "Testing refactored analyzer..."
    if ./bin/marketman run --test >/dev/null 2>&1; then
        echo "‚úÖ Refactored analyzer working"
    else
        echo "‚ùå Refactored analyzer test failed"
    fi
}

# Parse command line arguments
case "${1:-help}" in
    "install")
        install_cron
        ;;
    "remove")
        remove_cron
        ;;
    "show")
        show_current
        ;;
    "logs")
        show_logs
        ;;
    "test")
        test_setup
        ;;
    "help"|*)
        echo "Usage: $0 [command]"
        echo ""
        echo "Commands:"
        echo "  install  - Install MarketMan cron jobs"
        echo "  remove   - Remove MarketMan cron jobs"
        echo "  show     - Show current MarketMan cron jobs"
        echo "  logs     - Show recent MarketMan logs"
        echo "  test     - Test MarketMan CLI commands"
        echo "  help     - Show this help message"
        echo ""
        echo "Examples:"
        echo "  $0 install  # Install recommended cron jobs"
        echo "  $0 show     # See what's currently installed" 
        echo "  $0 logs     # Check recent activity"
        echo "  $0 remove   # Remove all MarketMan cron jobs"
        ;;
esac